; =========================================================
; This file was generated by NSISDialogDesigner 1.5.0.0
; https://coolsoft.altervista.org/nsisdialogdesigner
;
; Do not edit it manually, use NSISDialogDesigner instead!
; =========================================================
!macro FindIt In For Result
Push "${In}"
Push "${For}"
 Call FindIt
Pop "${Result}"
!macroend
!define FindIt "!insertmacro FindIt"

!include "MUI2.nsh"

!define PRODUCT_NAME "vSEC:CMS User Self-Service Browser Plugin"
!define PRODUCT_VERSION 1.0
!define TargetName vSEC_CMS_S_USSBP_Install
!define TargetFileName "${TargetName}.exe"


;General

	Unicode True
	Name "${PRODUCT_NAME}"
	OutFile "out\${TargetFileName}"
	InstallDir "$PROGRAMFILES64\Versasec\vSEC_CMS Self-service Browser Plugin"
	RequestExecutionLevel admin
	Icon "versasec.ico" 
  ShowInstDetails show
;Interface Settings

	!define MUI_ICON "versasec.ico"
	!define MUI_HEADERIMAGE
	!define MUI_HEADERIMAGE_BITMAP "versasec.ico"
	!define MUI_HEADERIMAGE_RIGHT
;Pages

  !insertmacro MUI_PAGE_LICENSE "${NSISDIR}\Docs\Modern UI\License.txt"
  !insertmacro MUI_PAGE_COMPONENTS
  !insertmacro MUI_PAGE_DIRECTORY
  !insertmacro MUI_PAGE_INSTFILES
  
  !insertmacro MUI_UNPAGE_CONFIRM
  !insertmacro MUI_UNPAGE_INSTFILES
  
;--------------------------------
;Languages
 
  !insertmacro MUI_LANGUAGE "English"

;Name "Self-Service Browser Plugin"
;OutFile "vssbp.exe"
;BrandingText $(BrandingText)
;Name and file
;Default installation folder
;InstallDir "$APPDATA\Versatile Security\vSEC_CMS_A"
;Get installation folder from registry if available
;InstallDirRegKey HKCU "Software\Versatile Security\vSEC_CMS_T_USS" "InstDir"
;Moved to IsProductInstalled
;Request application privileges for Windows Vista

Function openLinkNewWindow
  Push $3
  Exch
  Push $2
  Exch
  Push $1
  Exch
  Push $0
  Exch
 
  ReadRegStr $0 HKCR "http\shell\open\command" ""
# Get browser path
    DetailPrint $0
  StrCpy $2 '"'
  StrCpy $1 $0 1
  StrCmp $1 $2 +2 # if path is not enclosed in " look for space as final char
    StrCpy $2 ' '
  StrCpy $3 1
  loop:
    StrCpy $1 $0 1 $3
    DetailPrint $1
    StrCmp $1 $2 found
    StrCmp $1 "" found
    IntOp $3 $3 + 1
    Goto loop
 
  found:
    StrCpy $1 $0 $3
    StrCmp $2 " " +2
      StrCpy $1 '$1"'
 
  Pop $0
  Exec '$1 $0'
  Pop $0
  Pop $1
  Pop $2
  Pop $3
FunctionEnd
 
!macro _OpenURL URL
Push "${URL}"
Call openLinkNewWindow
!macroend
 
!define OpenURL '!insertmacro "_OpenURL"'




Function redisCheck
    Var /GLOBAL redisVersion
    Var /GLOBAL redisArchitecture
    Var /GLOBAL redisPath  
    !define CheckRedistributable  "!insertmacro _CheckRedistributable"
    !macro _CheckRedistributable _VERSION _ARCHITECTURE
    Push `${_VERSION}`
    Push `${_ARCHITECTURE}`
     Call redisCheck
    !macroend
    Pop $redisArchitecture
    DetailPrint "Check for Redis - $redisArchitecture"
    Pop $redisVersion
    DetailPrint "Check for Redis - $redisVersion"
    
    ReadRegDWORD $0 HKLM "SOFTWARE\Wow6432Node\Microsoft\VisualStudio\14.0\VC\Runtimes\x64" 'Bld'
  
    DetailPrint "redis $0"
    IntCmp $0 0x00007555 Equal Val1Less Val1More

Equal:
    DetailPrint "$0 = 0x00007555"
     Push true
     Goto End 
Val1Less:
    DetailPrint "$0 < 0x00007555"
    Push false
    Goto End
Val1More:
    DetailPrint "$0 > 0x00007555"
    Push true
    Goto End
End:
FunctionEnd

Function dotNETCheck
    Var /GLOBAL version
    Var /GLOBAL architecture 
    Var /GLOBAL dotnetPath 
    !define CheckDOTNET "!insertmacro _CheckDOTNET"
    !macro _CheckDOTNET _VERSION _ARCHITECTURE
    Push `${_VERSION}`
    Push `${_ARCHITECTURE}`
     Call dotNETCheck
    !macroend
   
    Pop $architecture
    DetailPrint "Check for Dotnet - $architecture"
    Pop $version
    DetailPrint "Check for Dotnet - $version"
    StrCpy $dotnetPath "powershell (dir (Get-Command dotnet).Path.Replace('dotnet.exe', 'shared\Microsoft.NETCore.App')).Name.foreach({ if ($$_ -ge '$version') { exit -1 } else {  } })"
    nsExec::ExecToStack $dotnetPath
    Pop $1
    ${If} $1 == -1
      Push true
    ${else}  
      Push false
    ${EndIf} 
FunctionEnd

Function .onInit
	;InitPluginsDir
	;IfSilent +2
	;File /oname=$PLUGINSDIR\splash.jpg .\Docs\Splash_T_USS.jpg

	;IfSilent jump_if_silent [jump_if_not]
	;Checks the silent flag, and jumps to jump_if_silent if the installer is silent, otherwise jumps to jump_if_not. 
	;The silent flag can be set by SilentInstall, SilentUninstall, SetSilent and by the user passing /S on the command line.
	;IfSilent jump_if_silent
	;newadvsplash::show 2000 1000 500 -1 $PLUGINSDIR\splash.jpg
	;jump_if_silent:

	;${GetOptions} $cmdline "-cogito" $R1
	;${If} ${Errors}
	;${Else} ;cmdline
	;   StrCpy $BRANDING_MODE "cogito"
	;${Endif}

	;call IsProductInstalled
	;call shutDownService
  SetDetailsView show 
  ; Var /GLOBAL dotnet64 
  ; Var /GLOBAL dotnet32
  ;DetailPrint "hello"
  ;Call CheckNetCoreVersion
  Call CheckDependecies
  
    
FunctionEnd

Function CheckDependecies
  Var /GLOBAL redisDownloadUrl 
  Var /GLOBAL dotnetDownloadUrl

 ${CheckDOTNET}  "3.1.1*" "64" 
     Pop $R0
     DetailPrint "Check for Dotnet - $0"
    
  ${CheckRedistributable}  "2019" "64"
     Pop $R1
     DetailPrint "Check for Redistributals - $0 $R1"

   ${If} $R1 == "false"
        DetailPrint "Error: VisualStudio DLLs to the standard package (C++) 2015 is required!!"
        DetailPrint "Setup was not completed successfully."
        MessageBox MB_YESNO|MB_ICONEXCLAMATION  "VC Redistributable is missing to install press YES and rerun installer" IDYES truevc IDNO falsevc
        truevc:
            StrCpy  $redisDownloadUrl "https://aka.ms/vs/16/release/vc_redist.x64.exe"
            ${OpenURL} "$redisDownloadUrl"
            Goto nextvc
        falsevc:
          
        nextvc:  
          Abort
    ${Else}
      DetailPrint "VisualStudio DLLs to the standard package (C++) 2013 is installed."
      StrCpy $R1 "true"
   ${EndIf}

    ${If} $R0 == "false" 
       MessageBox MB_YESNO|MB_ICONEXCLAMATION  ".Net Runtimes x64 missing to install press YES and rerun installer" IDYES true IDNO false
        true:
          ${If} $R0 == "false"
            StrCpy  $dotnetDownloadUrl "dotnet.microsoft.com/download/dotnet-core/thank-you/runtime-3.1.11-windows-x64-installer"
            ${OpenURL} "$dotnetDownloadUrl"
          ${EndIf}
          Goto next
        false:
        next:  
          Abort
    ${Else}      
      DetailPrint "Current DotNet Version is installed"
      StrCpy $R0 "true"
    ${EndIf}   

FunctionEnd

Function DoMainThings
  SetOutPath "$INSTDIR"
  ;ADD YOUR OWN FILES HERE...
  SetOverwrite on
  ;create reg settigs for the plugin
  WriteRegStr HKLM "SOFTWARE\WOW6432Node\Google\Chrome\Extensions\ahaijnliojgheoiiboelejgebahklgjh" "update_url" "https://chrome.google.com/webstore/detail/versasec-smart-card-plugi/ahaijnliojgheoiiboelejgebahklgjh?hl=de"
  WriteRegStr HKLM "SOFTWARE\WOW6432Node\Policies\Google\Chrome\ExtensionInstallForcelist" "1" "ahaijnliojgheoiiboelejgebahklgjh;https://clients2.google.com/service/update2/crx"
  WriteRegStr HKLM "SOFTWARE\Google\Chrome\Extensions\ahaijnliojgheoiiboelejgebahklgjh" "update_url" "https://chrome.google.com/webstore/detail/versasec-smart-card-plugi/ahaijnliojgheoiiboelejgebahklgjh?hl=de"
  WriteRegStr HKLM "SOFTWARE\Policies\Google\Chrome\ExtensionInstallForcelist" "1" "ahaijnliojgheoiiboelejgebahklgjh;https://clients2.google.com/service/update2/crx"
  WriteRegStr HKLM "SOFTWARE\Google\Chrome\NativeMessagingHosts\versasec.self_service_plugin" "" "$INSTDIR\com.versasec_self_service_plugin_chrome-win.json"
  WriteRegStr HKLM "SOFTWARE\Mozilla\NativeMessagingHosts\versasec_self_service_plugin" "" "$INSTDIR\com.versasec_self_service_plugin_firefox-win.json"
  WriteRegStr HKLM "Software\Versasec\CsmCoreBridge" "path" "$INSTDIR\CmsCoreBridge.exe"

  
  ; host app to communicate with browser
  File host\native-messaging-example-host.dll
  File host\native-messaging-example-host.exe
  File host\native-messaging-example-host.runtimeconfig.json
  ; cms core bridge 
  File host\CmsCoreBridge.runtimeconfig.json
  File host\CmsCoreBridge.exe
  File host\CmsCoreBridge.dll
  File host\CmsCoreBridge.pdb
  File host\mdcards.cfg
  ; common files for both apps
  File host\com.versasec_self_service_plugin_chrome-win.json
  File host\com.versasec_self_service_plugin_firefox-win.json
  File host\PipeCommunication.dll
  File host\native-messaging-example-host.bat
  File host\DotNetCmsCoreWrapper.dll
  ; additonal files
  File host\System.Security.AccessControl.dll
  File host\Microsoft.Extensions.DependencyInjection.Abstractions.dll
  File host\Microsoft.Extensions.DependencyInjection.dll
  File host\Microsoft.Extensions.Options.dll
  File host\Microsoft.Extensions.Primitives.dll
  File host\Microsoft.Extensions.Logging.dll
  File host\Microsoft.Extensions.Logging.Abstractions.dll
  File host\Serilog.dll
  File host\Serilog.Sinks.File.dll
  File host\Newtonsoft.Json.dll
  ; native dependencies
  SetOutPath "C:\ProgramData"
  File host\CmsCoreAdditionals.dll
  File host\CmsCoreDll.dll

  ;Create uninstaller
  WriteUninstaller "$INSTDIR\Uninstall.exe"
  
  ClearErrors
  FileOpen $0 $INSTDIR\settings.json w
  IfErrors done
  FileWrite $0 "$INSTDIR\CmsCoreBridge.exe"
  FileClose $0
  done:
FunctionEnd

Section "Main"
  DetailPrint "Main"
  #DetailPrint ${NSIS_MAX_STRLEN}
  
  #Pop $0 # return value/error/timeout
  #Pop $1 # printed text, up to ${NSIS_MAX_STRLEN}
  #DetailPrint $0
  #DetailPrint $1
  ;Call CheckDependecies
  Call DoMainThings
SectionEnd  

Section "Uninstall"

  ;ADD YOUR OWN FILES HERE...

  Delete "$INSTDIR\Uninstall.exe"
  Delete "$INSTDIR\com.versasec_self_service_plugin_chrome-win.json"
  Delete "$INSTDIR\com.versasec_self_service_plugin_firefox-win.json"
  Delete "$INSTDIR\native-messaging-example-host.dll"
  Delete "$INSTDIR\native-messaging-example-host.exe"
  Delete "$INSTDIR\native-messaging-example-host.runtimeconfig.json"
  Delete "$INSTDIR\native-messaging-example-host.bat"
  
  Delete "$INSTDIR\CmsCoreBridge.runtimeconfig.json"
  Delete "$INSTDIR\CmsCoreBridge.exe"
  Delete "$INSTDIR\CmsCoreBridge.dll"
  Delete "$INSTDIR\CmsCoreBridge.pdb"

  Delete "$INSTDIR\PipeCommunication.dll"
  Delete "$INSTDIR\DotNetCmsCoreWrapper.dll"
  Delete "$INSTDIR\Serilog.dll"
  Delete "$INSTDIR\settings.json"
  Delete "$INSTDIR\Serilog.Sinks.File.dll"
  Delete "$INSTDIR\Newtonsoft.Json.dll"
  
  Delete "$INSTDIR\Microsoft.Extensions.DependencyInjection.Abstractions.dll"
  Delete "$INSTDIR\Microsoft.Extensions.DependencyInjection.dll"
  Delete "$INSTDIR\Microsoft.Extensions.Options.dll"
  Delete "$INSTDIR\Microsoft.Extensions.Primitives.dll"
  Delete "$INSTDIR\Microsoft.Extensions.Logging.dll"
  Delete "$INSTDIR\Microsoft.Extensions.Logging.Abstractions.dll"
  Delete "$INSTDIR\System.Security.AccessControl.dll"
  
  
  Delete "C:\ProgramData\CmsCoreAdditionals.dll"
  Delete "C:\ProgramData\CmsCoreDll.dll"
  
  Delete "$INSTDIR\mdcards.cfg"
  RMDir "$INSTDIR"

 ; DeleteRegKey /ifempty HKCU "Software\Modern UI Test"
  DeleteRegKey HKLM "SOFTWARE\WOW6432Node\Google\Chrome\Extensions\ahaijnliojgheoiiboelejgebahklgjh"
  DeleteRegKey HKLM "SOFTWARE\WOW6432Node\Policies\Google\Chrome\ExtensionInstallForcelist"
  DeleteRegKey HKLM "SOFTWARE\Google\Chrome\Extensions\ahaijnliojgheoiiboelejgebahklgjh"
  DeleteRegKey HKLM "SOFTWARE\Policies\Google\Chrome\ExtensionInstallForcelist"
  DeleteRegKey HKLM "SOFTWARE\Google\Chrome\NativeMessagingHosts\versasec.self_service_plugin"
  DeleteRegKey HKLM "SOFTWARE\Mozilla\NativeMessagingHosts\versasec_self_service_plugin"
  DeleteRegKey HKLM "Software\Versasec\CsmCoreBridge"
  DeleteRegKey HKLM "Software\Versasec"
SectionEnd
